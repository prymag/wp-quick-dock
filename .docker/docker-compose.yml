version: '3.3'

services:

    nginx:
        container_name: ${PROJECT_NAME}_nginx
        build: 
            context: ./nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ${NGINX_DOCKER_PATH}/nginx.conf:/etc/nginx/nginx.conf
            - ${WP_CODE_PATH_HOST}:/var/www/html
            - ${NGINX_CONF_DIR}:/etc/nginx/conf.d
            - ${NGINX_SSL_DIR}:/etc/nginx/ssl
        depends_on: 
            - workspace
            - phpmyadmin

    db:
        container_name: ${PROJECT_NAME}_db
        image: mysql:latest
        volumes:
            - mysql_data:/var/lib/mysql
        restart: always
        command: 
            --innodb_use_native_aio=0 
        environment:
            MYSQL_ROOT_PASSWORD: somewordpress
            MYSQL_DATABASE: wordpress
            MYSQL_USER: wordpress
            MYSQL_PASSWORD: wordpress

    workspace:
        container_name: ${PROJECT_NAME}_wp
        depends_on:
            - db
        build: 
            context: ./workspace
            args:
                - USE_MAILHOG=${USE_MAILHOG}
                - MAILHOG_PORT=${MAILHOG_PORT}
        volumes:
            - ${WP_CODE_PATH_HOST}:/var/www/html
        restart: always
        environment:
            WORDPRESS_DB_HOST: db:3306
            WORDPRESS_DB_USER: wordpress
            WORDPRESS_DB_PASSWORD: wordpress
            WORDPRESS_DB_NAME: wordpress
            WORDPRESS_DEBUG: 1

    phpmyadmin:
        container_name: ${PROJECT_NAME}_pma
        image: phpmyadmin/phpmyadmin
        volumes:
            - ${PHPMYADMIN_DOCKER_PATH}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_ARBITRARY: 1
        restart: always
        depends_on:
            - db

    mailhog:
        container_name: ${PROJECT_NAME}_mailhog
        image: mailhog/mailhog

volumes:
    wp_data:
    mysql_data: